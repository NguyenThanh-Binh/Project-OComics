/// <reference types="react" />
import { ComponentMeta, ComponentStory } from '@storybook/react';
import { Menu } from '..';
declare const story: ComponentMeta<typeof Menu.Item>;
export default story;
export declare const DefaultItem: ComponentStory<import("../../../types/polymorphic").ForwardRefComponent<"button", {
    children: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconPosition?: "left" | "right" | undefined;
    subtext?: string | undefined;
    dimension?: "small" | "regular" | undefined;
    onClick?: ((event: Event, value: string) => void) | undefined;
    description?: import("react").ReactNode;
    disabled?: boolean | undefined;
    padding?: boolean | undefined;
    autoFocus?: boolean | undefined;
    decoration?: import("react").ReactNode;
    value: string;
} & Pick<import("../..").TooltipProps, "placement">>>;
export declare const WithCheckboxes: ComponentStory<import("../../../types/polymorphic").ForwardRefComponent<"button", {
    children: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconPosition?: "left" | "right" | undefined;
    subtext?: string | undefined;
    dimension?: "small" | "regular" | undefined;
    onClick?: ((event: Event, value: string) => void) | undefined;
    description?: import("react").ReactNode;
    disabled?: boolean | undefined;
    padding?: boolean | undefined;
    autoFocus?: boolean | undefined;
    decoration?: import("react").ReactNode;
    value: string;
} & Pick<import("../..").TooltipProps, "placement"> & {
    checked?: boolean | undefined;
}>>;
export declare const WithDecorations: ComponentStory<import("../../../types/polymorphic").ForwardRefComponent<"button", {
    children: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconPosition?: "left" | "right" | undefined;
    subtext?: string | undefined;
    dimension?: "small" | "regular" | undefined;
    onClick?: ((event: Event, value: string) => void) | undefined;
    description?: import("react").ReactNode;
    disabled?: boolean | undefined;
    padding?: boolean | undefined;
    autoFocus?: boolean | undefined;
    decoration?: import("react").ReactNode;
    value: string;
} & Pick<import("../..").TooltipProps, "placement">>>;
//# sourceMappingURL=menu-item.stories.d.ts.map