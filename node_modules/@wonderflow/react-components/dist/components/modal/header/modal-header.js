import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/*
 * Copyright 2022-2023 Wonderflow Design Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import clsx from 'clsx';
import { forwardRef, useMemo } from 'react';
import { IconButton, Stack, useOverlayContext } from '../../..';
import * as styles from './modal-header.module.css';
export const ModalHeader = forwardRef(({ children, className, hideCloseButton = false, hideBorder = false, theme = 'light', ...otherProps }, forwardedRef) => {
    const { onClose } = useOverlayContext();
    const isBorderHidden = useMemo(() => hideBorder || !children, [hideBorder, children]);
    return (_jsx("div", { "aria-label": "Header", className: clsx(styles.HeaderWrapper, className), ref: forwardedRef, "data-theme": theme, ...otherProps, children: _jsxs(Stack, { vAlign: "center", fill: false, hAlign: "space-between", direction: "row", className: styles.Header, "data-border-hidden": isBorderHidden, children: [_jsx("div", { children: children }), (onClose && !hideCloseButton) && (_jsx(IconButton, { "aria-label": "Close Button", onClick: onClose, className: styles.CloseButton, icon: "xmark", kind: "flat" }))] }) }));
});
ModalHeader.displayName = 'Modal.Header';
