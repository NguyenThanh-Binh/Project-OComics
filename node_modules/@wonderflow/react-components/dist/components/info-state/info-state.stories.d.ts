/// <reference types="react" />
import { ComponentMeta, ComponentStory } from '@storybook/react';
import { InfoState } from './info-state';
declare const story: ComponentMeta<typeof InfoState>;
export default story;
export declare const Default: ComponentStory<import("react").ForwardRefExoticComponent<{
    style?: Record<string, any> | undefined;
    className?: string | undefined;
} & {
    title: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconColor?: "gray" | "blue" | "cyan" | "green" | "purple" | "red" | "yellow" | undefined;
    image?: string | undefined;
    direction?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    actions?: import("react").ReactNode;
} & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>>>;
export declare const Horizontal: ComponentStory<import("react").ForwardRefExoticComponent<{
    style?: Record<string, any> | undefined;
    className?: string | undefined;
} & {
    title: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconColor?: "gray" | "blue" | "cyan" | "green" | "purple" | "red" | "yellow" | undefined;
    image?: string | undefined;
    direction?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    actions?: import("react").ReactNode;
} & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>>>;
export declare const WithImage: ComponentStory<import("react").ForwardRefExoticComponent<{
    style?: Record<string, any> | undefined;
    className?: string | undefined;
} & {
    title: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconColor?: "gray" | "blue" | "cyan" | "green" | "purple" | "red" | "yellow" | undefined;
    image?: string | undefined;
    direction?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    actions?: import("react").ReactNode;
} & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>>>;
export declare const WithImageHorizontal: ComponentStory<import("react").ForwardRefExoticComponent<{
    style?: Record<string, any> | undefined;
    className?: string | undefined;
} & {
    title: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconColor?: "gray" | "blue" | "cyan" | "green" | "purple" | "red" | "yellow" | undefined;
    image?: string | undefined;
    direction?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    actions?: import("react").ReactNode;
} & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>>>;
export declare const WithActions: ComponentStory<import("react").ForwardRefExoticComponent<{
    style?: Record<string, any> | undefined;
    className?: string | undefined;
} & {
    title: import("react").ReactNode;
    icon?: import("packages/symbols/dist").SymbolNames | import("react").ReactElement<HTMLOrSVGElement, string | import("react").JSXElementConstructor<any>> | undefined;
    iconColor?: "gray" | "blue" | "cyan" | "green" | "purple" | "red" | "yellow" | undefined;
    image?: string | undefined;
    direction?: "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    actions?: import("react").ReactNode;
} & {
    children?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>>>;
//# sourceMappingURL=info-state.stories.d.ts.map