import { jsx as _jsx } from "react/jsx-runtime";
import { fireEvent, render } from '@testing-library/react';
import { Button } from '../button';
import { Popover } from './popover';
describe('<Popover>', () => {
    test(' it should render properly', () => {
        const { container, getByTestId } = render(_jsx(Popover, { placement: "bottom-start", trigger: _jsx(Button, { kind: "flat", children: "Open popover" }), children: _jsx("div", { children: "Some Content" }) }));
        const btn = getByTestId('Button');
        fireEvent.click(btn);
        fireEvent.blur(btn);
        fireEvent.keyPress(btn, { key: 'esc' });
        expect(container).not.toBeNull();
    });
    test(' it should render properly open', () => {
        const { container, getByTestId } = render(_jsx(Popover, { placement: "bottom-start", trigger: _jsx(Button, { kind: "flat", children: "Open popover" }), open: true, matchTriggerWidth: true, children: _jsx("div", { children: "Some Content" }) }));
        const btn = getByTestId('Button');
        fireEvent.click(btn);
        fireEvent.blur(btn);
        fireEvent.keyPress(btn, { key: 'esc' });
        expect(container).not.toBeNull();
    });
    test(' it should render properly with props', () => {
        const { container } = render(_jsx(Popover, { placement: "bottom-start", trigger: _jsx(Button, { kind: "flat", children: "Open popover" }), disabled: true, children: _jsx("div", { children: "Some Content" }) }));
        expect(container).not.toBeNull();
    });
});
